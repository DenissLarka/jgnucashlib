package org.example.gnucash.write;

import java.io.File;

import org.gnucash.read.GnucashCustomer;
import org.gnucash.read.GnucashGenerJob;
import org.gnucash.read.GnucashVendor;
import org.gnucash.read.impl.NoTaxTableFoundException;
import org.gnucash.read.spec.WrongInvoiceTypeException;
import org.gnucash.write.impl.GnucashWritableFileImpl;
import org.gnucash.write.spec.GnucashWritableCustomerJob;
import org.gnucash.write.spec.GnucashWritableVendorJob;

import org.example.CommandLineTool;
import org.example.CouldNotExecuteException;

public class GenJob extends CommandLineTool
{
  enum JobType
  {
    CUSTOMER,
    VENDOR
  }
  
  // BEGIN Example data
  private static String  gcshInFileName  = "example_in.gnucash";
  private static String  gcshOutFileName = "example_out.gnucash";
  private static JobType type            = JobType.CUSTOMER; // e.g.
  private static String  ownerID         = "xyz";
  private static String  number          = "xyz";
  private static String  name            = "Jobbo McJob";
  // END Example data
  
  // -----------------------------------------------------------------

  public static void main( String[] args )
  {
    try
    {
      GenJob tool = new GenJob ();
      tool.execute(args);
    }
    catch (CouldNotExecuteException exc) 
    {
      System.err.println("Execution exception. Aborting.");
      exc.printStackTrace();
      System.exit(1);
    }
  }

  @Override
  protected void kernel() throws Exception
  {
    GnucashWritableFileImpl gcshFile = new GnucashWritableFileImpl(new File(gcshInFileName));
    
    GnucashGenerJob job = null;
    if ( type == JobType.CUSTOMER )
      job = doCustomer(gcshFile);
    else if ( type == JobType.VENDOR )
      job = doVendor(gcshFile);

    gcshFile.writeFile(new File(gcshOutFileName));
    
    System.out.println(job.getId());
  }

  // -----------------------------------------------------------------

  private GnucashWritableCustomerJob doCustomer(GnucashWritableFileImpl gcshFile)
      throws NoOwnerFoundException
  {
    GnucashCustomer cust = null;
    try
    {
      cust = gcshFile.getCustomerByID(ownerID);
      System.err.println("Customer: " + cust.getNumber() + " (" + cust.getName() + ")");
    }
    catch ( Exception exc )
    {
      System.err.println("Error: No customer with ID '" + ownerID + "' found");
      throw new NoOwnerFoundException();
    }
    
    GnucashWritableCustomerJob job = gcshFile.createWritableCustomerJob(cust, number, name);
    job.setName("Generated by GenJob");
    
    return job;
  }

  private GnucashWritableVendorJob doVendor(GnucashWritableFileImpl gcshFile)
      throws NoOwnerFoundException, WrongInvoiceTypeException, NoTaxTableFoundException
  {
    GnucashVendor vend = null;
    try
    {
      vend = gcshFile.getVendorByID(ownerID);
      System.err.println("Vendor: " + vend.getNumber() + " (" + vend.getName() + ")");
    }
    catch ( Exception exc )
    {
      System.err.println("Error: No vendor with ID '" + ownerID + "' found");
      throw new NoOwnerFoundException();
    }
    
    GnucashWritableVendorJob job = gcshFile.createWritableVendorJob(vend, number, name);
    job.setName("Generated by GenJob");
    
    return job;
  }
}
